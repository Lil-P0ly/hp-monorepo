---
version: "3.8"

services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda@sha256:8b2802411074676c96a81eb65483b29e63a212673023869e91fd41d728aaa278
    container_name: redpanda
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9644:9644"
    depends_on:
      - loki
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 512M
      - --reserve-memory 0M
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:9092
    healthcheck:
      test: ["CMD", "rpk", "cluster", "info"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-retries: "3"
        loki-batch-size: "400"  

  redpanda-init:
    image: docker.redpanda.com/redpandadata/redpanda@sha256:8b2802411074676c96a81eb65483b29e63a212673023869e91fd41d728aaa278
    container_name: redpanda-init
    depends_on:
      redpanda:
        condition: service_healthy
    entrypoint: /bin/sh
    command: 
      - -c
      - |
        until rpk cluster info --brokers redpanda:9092; do
          echo "Waiting for Redpanda..."
          sleep 1
        done
        rpk topic create honeypot-alerts --brokers redpanda:9092
        rpk generate prometheus-config
    restart: "no"

  honeypot-bait:
    build: ./honeypot-bait
    container_name: honeypot-bait
    ports:
      - "3000:3000"
    depends_on:
      - redpanda
      - db

    logging:
        driver: loki
        options:
          loki-url: "http://localhost:3100/loki/api/v1/push"
          loki-retries: "3"
          loki-batch-size: "400"


    # Honeypot_Bait CONF

  honeypot-bot:
    build: ./honeypot-bot
    container_name: honeypot-bot
    depends_on:
      - redpanda
      - db
    # Honeypot_Bot CONF  



      
  db:
    image: postgres:15
    container_name: db
    # restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: honeypot
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./honeypot-server/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d honeypot -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
        driver: loki
        options:
          loki-url: "http://127.0.0.1:3100/loki/api/v1/push"
          loki-retries: "3"
          loki-batch-size: "400"

  honeypot-frontend:
    build: 
      context: ./honeypot-frontend
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}

    container_name: honeypot-frontend
    ports:
      - "443:443"

    environment:
      - SERVER_IP=${SERVER_IP}
      
    depends_on:
      - redpanda
      - honeypot-backend
      - db

    volumes:
      - ./honeypot-frontend/nginx/ssl:/etc/nginx/ssl
      - ./honeypot-frontend/nginx.conf:/etc/nginx/nginx.conf
      
    logging:
        driver: loki
        options:
          loki-url: "http://127.0.0.1:3100/loki/api/v1/push"
          loki-retries: "3"
          loki-batch-size: "400"
# Observability

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    expose:
      - 9090
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - 3030:3000
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_URI: "db:5432/postgres?sslmode=disable"
      DATA_SOURCE_USER: "user"
      DATA_SOURCE_PASS: "password"
    links:
      - db
      - prometheus
  loki:
    container_name: loki
    restart: unless-stopped
    image: grafana/loki:latest
    ports:
      - '3100:3100'
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 3s
      retries: 5

    volumes:
      - ./observability/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml


  honeypot-backend:
    build: ./honeypot-server/backend
    
    depends_on:
      redpanda:
        condition: service_healthy
      db:
        condition: service_healthy
      loki:
        condition: service_started

    container_name: honeypot-backend
    ports:
      - "5000:5000"
    environment:
      PYTHONUNBUFFERED: 1
      KAFKA_BROKER: redpanda:9092
      KAFKA_TOPIC: honeypot-alerts
      GROUP_ID: honeypot-consumer-group
    logging:
        driver: loki
        options:
          loki-url: "http://localhost:3100/loki/api/v1/push"
          loki-retries: "3"
          loki-batch-size: "400"


volumes:
  pgdata:
  prometheus_data:
  grafana_data:
  loki-data:
